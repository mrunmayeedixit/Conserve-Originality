Abstract: We have investigated the phase equilibria in tAE )BaCuO/ Ag systems, the influence of Ag on the processing of (AE )BaCuO/ Ag composites and the resulting properties. YBaCuO / Ag composites have been grown by the modified melt crystallization process with YBa ZCu 30 " YZ03" Pt and AgzO in the precursor. The improved strength of the YBaCuO lAg composites compared with the conventional YBaCuO bulk material permitted us to magnetize these materials to achieve trapped fields up to 16 T (at 24 K) in the gap of a mini-magnet. The investigation of the microstructure revealed a remarkable increase of the spacing between micro-cracks especially of those perpendicular to alb-planes when 12 wt% Ag was added. In the case of 5mBaCuO / Ag composites, Ag has a strong influence on processing and causes interactions between RE123 seeds and the sample. We show the growth of single-grain 5mBaCuO/ Ag composites in air and discuss the influence of post-annealing on increasing T« and J c • Furthermore, YBaCuO lAg composites have been shown to be appropriate materials used as a solder to join large single grains to large arrays or to "repair" grain boundaries in arrays grown by a multiseeding technique. Introduction The interest in the influence of Ag on the behavior of cuprate superconductors arose already in the early stage of high-temperature superconductor (HTS) research. One can define at least 3 different motivations to investigate interactions between Ag and cuprates .lowering the liquidification temperature; mechanical reinforcement of ceramic or bulk materials;changing intrinsic properties of the super-conducting phase. Attempts  to  prepare  extended  superconducting tapes consisting of YBalCu3()7(YI23) on Ag alloys began in 1993, after it had been found that the peritectic decomposition temperature of Y123 can be depressed below the melting temperature of AgPd alloys in reduced oxygen partial pressureCl J• On the other hand, composite ceramics of polycrystalline Y123 with Ag have been shown to appear less brittle than the polycrystalline sintered Y123 body, resulting in increased fracture toughness and strength<:. The mechanical properties, indeed, revealed to be a crucial limitation to achieve very high trapped fields in bulk Y123-based superconducting materials Csuperconducting permanent magnets )[6,7]. The large Lorentz forces during magnetizing YBaCuO cylinders in fields of 10 T or more cause fatal cracking of the melt textured material. Therefore, the improvement of mechanical properties in a composite material, which contains ductile Ag inclusions, was the starting idea for intensive work on YBaCuO/Ag composite materials. In this paper the role of Ag in improving mechanical properties will be emphasized and the influence of Ag on phase formation will be discussed in more details with YBaCuO/Ag as an example.Later on, a flux containing Ag was applied to grow (RE)1+xBa2-xCu307 (RE123) based bulk materials with large rare earth (RE) ions, the processing of which proved to be complicated due to high peritectic temperatures for these compounds since no appropriate seeding material was available. It was shown by Ikuta et a1. [2J that an adapted growth process in a controlled oxygen atmosphere (()CMG) is suitable to prepare large single domains of bulk Ag composite materials based on 5mBa2Cu3()7 Recently, Nariki et al. [3J have grown large GdBa2Cus07/Gd2BaCu()s/Ag bulk materials of remarkably high quality. Trapped fields of 2. 1 T and 1. 8 T have been measured at 77 K in a distance of 1.2 mm from the surface of 65 mm and 48 mm diameter samples, respectively.In Section 1 of the paper, the compatibility of Ag/REI23 composites with seeding and processing will be reported and the interactions between seed and flux will be investigated for a 5mBaCuO/Ag composite material in different atmospheres .Near-net-shape processing and techniques _ to produce large quasi-single domain bulk materials is a need for power application of bulk materials. In Section 2, we present a modified method to use a YBaCuO/Ag composite as a solder to join large single grains grown by a multiseed method[9].YBaCuO/ Ag Composites Modified melt crystallization process applied to the experiments reported here with .r between 0 and o. 43 (0 and 16 wt % related to the weight of the Y123 phase). The precursor materials were mixed, ground and pressed in a uniaxial press. Sm123 single crystals were set on to the top face before heating in air to 1030 C. After a dwell time of 20 min, the sample was cooled to 1000 C, followed by the growth period with slow cooling (1 K • h -1) to 940C. After ramping down (30 K • h -1), the final oxygenation proceeds in pure oxygen at 380·C.Phase relationships in the YBaCuO/Ag system The thermodynamic approach has been revealed to be an appropriate guideline to grow highly oriented (RE)Ba2Cu307 based large grain superconductorsJ. Despite that our knowledge about the four component phase diagram YO!. 5-Ba()-CuOn-Ag is still incomplete, the sections in Fig. 1 can explain the relevant fea tures of the process. Figure 1 presents sections with (YI/6Ba2l6 CU3/607/6+k/6 Y 20 3+m/6 Y2BaCuOs) at the one end and Ag (e) at the other end which are based on quantitative thermoanalysis and microstructure investigations at o. 21 bar (1 bar = 105 Pa ) oxygen pressure[lZ.13]. Figure 1a shows the behavior of the Y123-Ag mixtures (k=nz=O).Note that the Y123 phase forms a solid solution YBaz (Cul-yAgy )J()7-0 (Y123ss). the composition of which does not belong to the section considered in Fig. 1a - l c. This solid solution is formed by a solid state reaction (ssr ) ,SST: YBa2Cu3()7+3y Ag+1. 5y O 2 ----YBa2(Cul-yAgy)307+3y CuO and it will also appear during ramping the green body to the process temperature. accompanied by small amounts of Cu(). The maximum Ag concentration in the subsolidus Y123ss was reported in Ref. [12J to be y=O. 02.The Y123ss phase, however, which grows from the yell. s-BaO-CuC)n-Ag system in the melt texturing process, contains less Ag (y=O. 016).The composition with the lowest melting point (870C) in YOl.s-BaO-Cu()n-Ag is the ternary eutecticsV! , the composition of which is 0.10 Ag-O. 0112 vo.i-o. 2588 BaO-O. 63 ceo.. whereas 7 = 944 C is the lowest temperature at which a melt in any YBa2Cu307-Ag mixture was observed. Note that this is 10K below the melting in air point of Ag the appearance of the metallic melt 1-4 conists mainly of Ag which should be attributed to a pseudo reaction e : YI23ss+CuO+Ag=I.....This reaction appears invariant with temperature at the considered section since the amount of CuO resulting from ssr does not exceed the solubility limit of CuO in the Ag rich melt L (see Fig. La) and can be considered as a degenerated variant of the invariant reaction U1 proceeding in the quaternary system Ul:Y123ss+CuO+Ag=L + L.At concentrations higher than 2. 5 mol ~~ Ag, the complete decomposition of Y123ss takes place at 980 C in a reaction of the monotectic type m (somewhere also called a monotecto-peritectic reaction as simultaneously proceeding monotectic and peritectic reactions [12J) m , YI23+1-4=211+I~.L and 1./ designate the YBa ZCu,j07 rich and the Ag rich compositions of the melt along the immiscibility line. respectively, according to Fig. la. The monotectic composition of 2. 5 mol~;£; is labeled by X m in this figure corresponding to 5 mol % Ag in the I~ liquid or 2. 6 wt % Ag 2( ) addition to YBa2Cu307. The section, Fig. 1b , in the multi-component phase diagram is relevant to a precursor composition, which is applied to the MMCP. Note that Y Z0 3reacts with a part of Y123 already in the subsolidus region to form Y211. Here, the solid solution YBa2 (Cu.c., Agy ) 30 7 does not extend to the shown section in the subsolidus region. This figure indicates the quasi-monotectic reaction m: Y123+I.,/=Y211 +I~ to appear already at 970 C in air, which causes Y123 to disappear at any Ag concentration larger than 5 mol%. Note that Y123 coexists with L between 1020C and 970C in air.The phase relationships get more complicated in the Ag rich part which, however, will influence only the crystallization of the residual melt in the sample.Figure Ic represents a precursor mixture of Y123 + Y2ll phase (k = 0, m = o. 6) which is applied to the experiments in Section 2, when a YBaZCu307!YzBaCuOs/Ag composite is used as a solder rnaterial. Growth and microstructure evolution in YBaCuO / Ag composites According to the phase equilibria, the precursors of practical relevance ha ve a hyper-monotectic composition. The hyper-rnonotectic precursor, first heated to the Y211 +L phase field (Fig. Ib ) and then slowly cooled down, remains in the supersaturated (undercooled ) state from which the solid solution can crystallize in the quasi-monotectic reaction m, leaving the residual melt L with a composition corresponding to T(m).On the basis of a quantitative microstructure analysis[13] , it was found that during the melt-growth of a Y123!211 single-grain sample from a starting composition YI23+0. 24Y z0 3+xAg, the monotectic-like crystallization has also occured in the case of hyper-rnonotectic compositions. After cooling down to the crystallization temperature, the supersaturated L liquid does not decompose in the entire sample volume. Instead, it decomposes only in the vicinity of the growth front. At a certain critical average concentration of Ag in the melt (for given solidification conditions), the concentration of Ag in the Ag diffusion zone reaches its critical value and L in the vicinity of the growth front becomes unstable. The estimated critical average concentration of Ag in L is 12.6mol% .. At a lower than critical average Ag concentration in the melt, the supersaturated L melt does not decompose, and therefore no Ag particles are trapped in the growing crystal. This phenomenon of supersaturation IS apparently Fig. 2 Measured volume content VAg and average diameter dAg of the Ag particles in the samples with 8 and 12 wt % AgzO addition. Optical micrographs in normal light (c)-(d)) taken from the a-growth sector of the sample with 8 wt% AgzO addition cut along the a-c plane. (c) The Ag particles at the start of trapping. (d) At the end of the low growth rate region CLGRR). (e) Elongated Ag particles aligned in the growth direction seen at the beginning of the high growth rate layer (HGRL). SM means solidified melt and SFR means silver free region. Further inhomogeneities come from the changing crystallization rates during the process, since trapping of inert particles (Ag droplets in our case) is supported by increasing drag forces, which responsible for the Ag-free region found near the seed in the samples with lower Ag addition than 12.6 mol% (Fig. 2).appear with higher solidification rates [13.14] • The observed pronounced alignment of elongated Ag particles into rows parallel to the growth direction at the higher growth rate (Fig. 2e). and the phenomenological analysis of the crystallization process[I3] proved that solidification of 123 with Ag addition can be counted as so-called B type monotectic crysta lliza tion[IS]. The composition of Ag particles was determined by energy dispersive X-ray spectroscopy <EDX) to be	Ago.88±O. 02CUO. 02±O. 005 00. HJ±O. 03	roughly	in accordance with the Ag-Cu-O phase diagram, whereas the superconducting phase YBazM 30 7 is a solid solution with M = (Ago. 016±O. 004 Cu., 984±0. 004 ) which is estimated to represent the equilibrium solubility limit of Ag under the conditions of growth, i. e. ~ 0.21 bar Oz, T~960 C. Superconducting properties of YBaCuO/Ag Despite the significant content of Ag , the superconducting transition in the melt grown samples is sharp at T; = 92. 2 K, in contradiction to results for polycrystalline samples prepared at 900C[l6J. Trapped fields at 77 K have not been affected significantly by Ag in the samples which are 24 mm in diameter. The resistance against Lorentz forces, however, is increased, thus allowing us to trap 6. 7 T which was achieved at 40 K on top of a single disc without injurious cracking of the sample, and 11. 4 T if the superconductor was additionally armed with a ring of stainless steel (achieved at 17 K, see Fig. 3). A further increase has been achieved using the improved pinning behavior in a Y123 melt-textured material with o. 5 % eu atoms in YbalCu3()7 are substituted by Zn[17.18J. The improved pinning was also realized in YBaCuO/Ag composite materials doped with Zn. In this case, Fig. 3 indicates the trapped field of 12. 2 T on top of the single disc of YBaCu()/Ag : Zn, and cooling was necessary only Fig. 3 Trapped (remanent) field vs. temperature T in the gap of a mini-magnet from two YBaCuO cylinders (diameter 22 mm) , steel bandage applied[7]. to 22 K. A remanent field as high as 16 Twas measured at 24 K with the same material in the 2.5mm gap of a mini-magnet consisting of two cylindrical superconductors, 24 mm in diameterl, Improved mechanical behavior in YBaCuO! Ag composite material. It has been shown in a previous paper that both fracture toughness and strength (measured by bend tests) are increased by about 25 % in the melt-textured YBaCuOjAg composite material compared with normal melt-textured materials[ls]. This improvement is of the same order as observed in polycrystalline sintered ceramics and can hardly be believed to be the only reason for the remarkably increased reinforcement under the influence of the Lorentz force. Quantitative evaluation of microstructural images conveys a better understanding. The presence of pronounced macrocracks in the c-direction (perpendicular to(100) type alb-planes) has been observed in Ref. [19] on polished sections after etching besides the well-known alb-microcracks parallel to (100) planes (Fig. 4).Whereas the latter are accepted to appear due to the difference in thermal expansion (including oxygen uptake) of 123 and 211 phases[lO], the c-directed macrocracks appear during the tetragonal-to-orthorhombic <T /0) phase transformation. This can be concluded from Fig. 5 which shows the crack in the c-direction stopping at the boundary between oxidized (orthorhombic) and incompletely oxidized (still tetragonal) parts of the sample. Furthermore, Table 1 indicates the remarkably reduced density of cracks (especially parallel to c) in the YBaCuO/Ag composites compared with standard YBaCuO (see also Fig. 4).Table 1 Comparison of YBaCuO/Ag composites with standard YBaCuO. alb microcrack spacing, Aa-b-C; c-crack spacing, Ave; 211 particle size, d111 ; Ag particle size, dAi ; 211 volume percent, V211 ; and Ag volume percent, VAi; in the Ag free and Ag doped single-grain Y123 bulks. a is standard deviation.The reason why Ag addition suppresses cracking can be associated with micro-stresses introduced by Ag particles during cooling down from the processing temperature. The thermal expansion coefficient of the 123 phase is less in the alb-plane Fig. 4 Cracks are more dense in Ag free samples (a), (c) than in the sample with 12 wt % Ag (b), (d) . This is demonstrated for both alb-microcracks (upper line, a, b) and macrocracks paraJlell to c-axls (lower line c , d).. The density of macrocracks appearing parallel to c-axls is reduced in the YBaCuO/Ag composite (d) compared with the Ag free sample. Ag particles appear bright. Sections are polished and etched.Fig. 5 A c-crack stopping at the boundary between orthorhombic and tetragonal phases.and is higher in the c-axis than the thermal expansion coefficient of silver (Table 2). However, due to the very high plasticity of Ag (very low yielding stress), silver particles can be, in the first approximation, considered to be more like a liquid rather than a rigid solid. Then. the total volume change must be taken into account instead of the anisotropy of the thermal expansion coefficient, when estimating the micro-stresses induced by Ag particles. The volume change of aTypical value for oxides. * Including both thermal expansion and oxygen uptake.unit volume from the processing temperature (925 C) to room temperature (calculated using the thermal expansion coefficients shown in Table 2) is ~VAg == 8. 87 X 10-6 for Ag and ~V123/211 = 2. A6 X Fig. 4 Cracks are more dense in Ag free samples (a), (c) than in the sample with 12 wt % Ag (b), (d) . This is demonstrated for both alb-microcracks (upper line, a, b) and macrocracks paraJlell to c-axls (lower line c , d). The density of macrocracks appearing parallel to c-axls is reduced in the YBaCuO/Ag composite (d) compared with the Ag free sample. Ag particles appear bright. Sections are polished and etched.Fig. 5 A c-crack stopping at the boundary between orthorhombic and tetragonal phases.and is higher in the c-axis than the thermal expansion coefficient of silver (Table 2). However, due to the very high plasticity of Ag (very low yielding stress), silver particles can be, in the first approximation, considered to be more like a liquid rather than a rigid solid. Then. the total volume change must be taken into account instead of the anisotropy of the thermal expansion coefficient, when estimating the micro-stresses induced by Ag particles. The volume change of a Table 2 Room temperature elastic constants, mechanical properties and thermal expansion values. E , Young modulus; K, bulk modulus; II, Poisson ratio; a, average thermal expansion coefficient; K Ie, fracture toughness; aJ yielding stress unit volume from the processing temperature (925 C) to room temperature (calculated using the thermal expansion coefficients shown in Table 2) is ~VAg == 8. 87 X 10-6 for Ag and ~V123/211 = 2. A6 X 10- 6 for a composite of 123 + 21 vol % 211. If the Selsings[2l] formalism of stress estimation used in Ref. [18J is applied, we can write: Here,	Po is  the	hydrostatic	pressure  in	the	Ag particle, 0123/2118	(r)	and	0'123/2118	(r)	are	the tangential	stresses in	the	123/211	matrix,0123/211R(r) is the radial stress in the 1231211 matrix, RAg is the radius of the Ag particle, 11123/211 is the mean Poisson ratio (mean of the a, band c directions of the 123 phase), E 123/211 is the mean Young modulus of the 123/211 composite, K Ag is the bulk modulus of silver, R, () and e indicate components in spherical coordinates, and r is the distance from the center of the Ag particle. The signs of +0' and - (J signify tensile or compressive stress, respectively. The 
stresses a t the particle-matrix interface do not depend on the particle size. They decrease with RAg/r and are at 12.5% of the maximal value at r= 2R Ag• The tensile radial stress 0'123/211R (r) = 530 MPa and compressive stresses(J12~/2118(r) =  -  0 123/211flP  (r)   == 265  MPa  were estimated for the particle-matrix interface using values from Table 2. Consequently, Ag particles introduce completely different stress field into the matrix when compared with 211 particles. This stress field IS schematically shown in Fig. 6. 4 Conclusions The addition of silver to RE123 (RE=Y, Sm ) has been found to influence both properties and processing of melt-textured bulk (RE)BaCuO/Ag composite materials. The improved mechanical strength of YBaCuO / Ag composites permits a field as high as 16 T to be trapped at 24 K in the gap between two stacked cylindrical samples. The solidification of (RE)BaCu()/Ag composite materials proceeds in a quasi-monotectic instead of the peritectic reaction for pure (RE) BeCuf) materials. The quasi-monotectic temperatures for different RE123 (RE = Nd , Sm , or Gd ) compounds differ by about 15 K in air and by less than 10 K at p «()zX = 10-3 bar, resulting in a strong interaction with the seed, if RE123 is used as seed material. Therefore, hot seeding is unavoidable. It has been shown that 5mBaCuO/Ag can be prepared in air and its properties can be improved by a post-annealing under low oxygen partial pressure.Promising results concerning the welding of two independently grown large single grains prepared by the multi-seeded technique are presented. The key procedure consists in controlling the growth direction and using the thin layer cut from a YBaCuO/Ag melt-textured sample as a solder. Both microstructure analysis and the superconducting properties indicate that a good junction could be obtained. The spacer layer is composed of a single 123 grain with the same orientation as the two adjacent YBaCuO blocks. The superconducting properties in the joint can achieve the same quality as in the YBaCu() bulk samples and a high critical current can flow across the junction resulting in high trapped magnetic field. Acknowledgments The authors are indebted to Mrs. G. Stover, B. Thaut and w. Heppner for their careful assistance in experimental work. Abstract—We address the difficult problem of catching in-flight objects with uneven shapes. This requires the solution of three complex problems: accurate prediction of the trajectory of fastmoving objects, predicting the feasible catching configuration, and planning the arm motion, and all within milliseconds. We follow a programming-by-demonstration approach in order to learn, from throwing examples, models of the object dynamics and arm movement. We propose a new methodology to find a feasible catching configuration in a probabilistic manner. We use the dynamical systems approach to encode motion from several demonstrations. This enables a rapid and reactive adaptation of the arm motion in the presence of sensor uncertainty. We validate the approach in simulation with the iCub humanoid robot and in real-world experiments with the KUKA LWR 4+ (7-degree-of-freedom arm robot) to catch a hammer, a tennis racket, an empty bottle, a partially filled bottle, and a cardboard box. I. INTRODUCTION WE consider the problem of catching fast-flying objects on nonballistic flight trajectories: in flights that last less than a second, with objects that have arbitrary shapes and mass, and when the catching point is not located at the center of mass (COM). The latter condition requires the robot to adopt a particular orientation of the arm to catch the object at a specific point (e.g., catching the lower part of the handle of a hammer). Catching such an object in-flight is extremely challenging and requires the solution to three complex problems. 1) accurate prediction of the trajectory of the objects: the fact that an arbitrary shaped or nonrigid object yields a highly nonlinear translational and rotational motion of the object; 2) predicting the optimal catching configuration (intercept point): As the robot must catch the object with a particular hand orientation, this limits tremendously the possible catching configurations; 3) fast planning of precise trajectories for the robot’s arm to intercept and catch the object on time, given that the object is in-flight for less than a second. Accurate prediction of the flight trajectory of the object relies on accurate sensing, which cannot always be ensured in robotics. This requires a frequent reestimation of the target’s location as both robot and object move. To compensate for such inaccurate sensing, we need to predict robustly the whole trajectory of fast-moving objects against sensor noise and external perturbations. At the same time, we need to constantly and rapidly repredict a feasible catching configuration and regenerate the desired trajectory of the robot’s arm. A schematic overview of our framework is shown in Fig. 1. A. Robotic Catching A body of work has been devoted to the autonomous control of fast movements such as catching [13], [18], [25], [28], [30]–[32], [44], hitting flying objects [24], [37], and juggling [6], [33], [35]. We here briefly review these works with a focus on how they 1) predict trajectories of moving objects, 2) determine the catching posture, and 3) generate desired trajectories for the robot’s arm and hand. 1) Object Trajectory Prediction: To catch effectively a moving object, we must predict its trajectory ahead of time. This then serves to determine the catching point along this trajectory. Most approaches assume a known model of the dynamics of motion. For instance, Hong and Slotine [18] and Riley and Atkeson [32] model the trajectory of a flying ball as a parabola and estimate the parameters of the model recursively through least squares optimization. Frese et al. [13] use a ballistic model incorporated with air drag for the ball trajectories; they use it in conjunction with an extended Kalman filter (EKF) [3] for online reestimation of the trajectory. Such approaches are accurate at estimating the trajectories, but they rely on an analytical motion model for the object. In addition, most of the study is tuned for spherical objects by estimating only the position of the object’s COM. However, to catch a complex object such as a hammer or a tennis racket, we need to estimate the complete pose of the object to determine the precise location of the grasping posture. This grasping posture is usually not located on the COM of the object.1 Rigid body dynamics [5] can be applied to estimate the complete pose of the object but still requires the properties of the object to be measured (such as its mass, position of the COM, and moment of inertia). In our previous work [22], we learned from demonstrations the dynamics of more complex objects whose shapes are arbitrary, nonrigid, or their points of interest are not at the COM. We encode the demonstrations using a dynamical system (DS) that provides an efficient way to model the dynamics of a moving object, solely by observing examples of the object’s motion in space. Note that this does not require any prior information on the physical properties of the object, such as its mass, position of COM, and moment of inertia. In order to deal with noise and unseen perturbations, we combine the output of the regression model of the machine-learning techniques with EKF. Once the system is learned from the demonstrations, it is used to predict the object acceleration and angular acceleration at each step in time given an observed current position, velocity, orientation, and angular velocity of the object. We estimate the whole trajectory of the object by integrating these values further in time. It is noted that the estimates are in the 6-D space (position of the point of interest and an orientation of a frame rigidly attached to the object). In this paper, we further develop the previous work by combining it with an algorithm to accurately predict the grasping posture of the hand. Next, we review the state of the art to determine the catching configuration. 2) Catching Pose Prediction: One way to determine the desired catching posture is to determine the intersection between the robot’s reachable space (usually its boundary is represented as a series of spheres or planes) and the object’s trajectory. If there is more than one solution, one chooses the intersection point that is closest to either the robot’s base [18] or to the initial position of the end-effector [13]. Although this method works well to determine the location of the catching point, it does not determine the orientation of the object because these works only consider ball-shaped objects. Furthermore, these approaches give a coarse approximation of the robot’s reachable space in Cartesian space by limiting the radius and height of a robot [18] or using an infinite polyhedron [13]. 3) Planning Catching Motion: The final catching configuration is constantly updated at a very fast rate to counter unseen dynamic effects. From a control viewpoint, this requires the robot motion planner to be very rapid (of the order of 10 ms) in replanning the desired trajectory as the position of the catching point keeps changing (as an effect of reestimating the trajectory of the object). Moreover, for efficient catching, in addition to the end-effector motion, the dynamics of the fingers need to be properly tuned to avoid the object bouncing off the palm or fingers. To represent the desired trajectory for the end-effector in catching tasks, many researchers [18], [30], [37], [44] use polynomials that satisfy boundary values. For instance, Namiki and Ishikawa [30] minimize the sum of the torques and angular velocities to satisfy constraints on the initial and final position, velocity, and acceleration of the end-effector. Note here that, although all of these approaches were successfully applied to object catching, hitting, or juggling, they were explicitly time dependent; hence, any temporal perturbation after the onset of the motion was not properly handled. Spline-based trajectory generation [1], [19] and minimumjerk [27] methods have also been popular means to encode timeindexed trajectories with a finite set of terminal constraints, e.g., positions, velocities, and accelerations at start and end points. However, the number of control points and degrees of the spline need to be tuned depending on the nonlinearity of the motions. Moreover, as the constraints are only terminal, it is difficult to establish the feasibility of the state space (position-orientation tuples) visited because of interpolation. One way to alleviate this problem is to directly model trajectories in joint space. This would require a fast and global inverse kinematics (IK) solver. It is difficult to obtain an IK solver without heuristics for general kinematic chains. Furthermore, it is hard to learn a global IK solver from human demonstrations because of the redundancy and singularities of the human and robot work spaces. Another approach for generating end-effector trajectories uses human demonstrations to learn generalized descriptions of a skill. To catch vertically falling objects, Riley et al. [32] use point-to-point motion primitives that are learned using programmable pattern generators [34] based on human movements. Their approach is capable of modifying the trajectory online for a new target. Our work follows this line of research and further develops controllers to guide hand–arm motion, which is learned from human demonstration. In our recent work [14], [20], we take the approaches of using time-invariant DSs as a method for encoding robot motion. We showed that this could be applied to various tasks that require rapid and precise recomputation of the end-effector motion, such as obstacle avoidance [21]. The drawback of using time-invariant controllers is that one does not control explicitly for time. When catching an object in flight, controlling for time is crucial. In [23], we offered a solution to control for the task duration in time-invariant DS controller, through fast-forward integration and scaling. Even though many approaches might be valid for the robotic catching task, we follow our previous approach here to enable the robot to intercept the flying object at a particular time and particular posture by boosting the learned dynamics. One of the advantages of this approach is that we expect that the trajectory generated by the learned model is feasible, as the approach uses feasible demonstrations to train the model. Furthermore, for the frequent changes of predicted catching posture, our method provides a way of adapting the robot motion to these changes by expecting the feasibility [14], [20]. Another aspect of object catching that is inadequately or not at all addressed by the aforementioned works is the motion of the fingers. To complete the catch, the dynamics of the finger motion need to be appropriately tuned and coupled to the arm motion. Most works on catching depend on the very rapid closing of the fingers. Usually, finger closure is triggered once the distance between the object and the end-effector has decreased below a certain threshold [18], [28], [30], [32]. This approach requires the precise tuning of several parameters including the threshold, the finger trajectory, and velocity. Bauml et al. [4] present an optimization-based approach that minimizes the acceleration of robot’s joints during the catching. Although this method is very effective, it requires significant computing power in the form of 32-core parallel programming to compute the optimized solution at run time. In our previous work on ball catching [23], we simply perform a linear interpolation between the rest position and grasping configuration of the fingers, depending on the distance of the ball from the palm. In [38], we show that modeling arm and hand motion through coupled dynamical systems (CDS) is advantageous over the classic approaches reviewed previously. The explicit coupling between arm and hand dynamics ensures that the finger closure will be naturally triggered at the right time, even when the hand motion is delayed or accelerated to adapt to changes in the prediction of the catching point. This offers a robust and fast control of the complete hand–arm system without resorting to extensive parameter tuning. B. Reachable Space Modeling Representing the space of the robot’s feasible hand postures is essential for both catching the object and for planning the arm motion. Before initiating the arm movement for catching, we need to calculate if any graspable part of the object lies inside the reachable space. Early investigations of this issue focus on determining and generating a geometrical model of the reachable space of the robot. Polynomial discriminants [43] and classic geometric approaches [29], [26] are used to characterize the boundaries of the robot’s reachable space. However, these methods cover only a few special kinematic chains and are not applicable to all manipulators. Another body of approaches approximates the reachable space of a robot as density functions [9], [40]. These prove to be useful for dealing with large datasets of reachable endeffector positions. However, these methods are evaluated only for discretely actuated manipulators. Detry et al. [11] introduce a method to model a graspable space by using a density function approach. They model the 6-D graspable space by using kernel density function. The model is learned by letting a robot to explore successful grasping postures. Our study is similar to that of Detry et al. [11] in that we also model the graspable space. Additionally, we model the reachable space and propose a means by which we can combine the two probabilistic representations. To ensure finding the best grasping posture in real time, combining the two (reachable space and graspable space) models is essential in our application. More recent approaches target the creation of full databases of the reachable positions obtained by sampling the Cartesian space Guilamo et al. [17] use a database of mapping between the joint angles of a robot and the discrete voxel representation of the reachable space. Guan and Yokoi [16] also propose a database approach to represent the reachable space for a full-body humanoid robot. Three-dimensional reachable space is discretely divided into cells, and while the robot ensures proper balancing, it tests each cell to check the reachability. All the successful configurations are then stored in the database. In another work, the same authors [15] propose a mathematical method to model the boundary of the reachable space, while the robot ensures kinematic constraints and proper balancing. However, these methods yield a discrete approximation of the reachable space without a precise description of the boundary. Moreover, these are expressed as only 3-D positions in Cartesian space. A few works consider the orientation to model the reachable space of a robot. Zacharias et al. [41], [42] propose a compact representation of the Cartesian reachable space. They uniformly divide the complete reachable space into 3-D cells. Then, they build a capability map that represents how many orientations are reachable at each position cell. However, this map is discrete and only gives a score that reflects the ease of reaching to that position. Similarly, DianKov et al. [12] store all the valid 6-D end-effector positions by randomly sampling the 6-D poses and solving IK for each of these. The reachable space depends on the number of degrees of freedom (DOF) of a robot, joint limits, link lengths, selfcollision, etc. Hence, the 6-D reachable space, which is spanned by the feasible positions and orientations of a robot, is highly nonlinear and varies drastically from robot to robot. Here, we propose a probabilistic model of the 6-D reachable space of the robot hand (all feasible positions and orientations). C. Our Approaches and Contributions In this paper, we propose a framework that enables a robot to catch flying objects. We combine three strands of our previous works on 1) learning how to predict accurately the trajectory of fast-moving objects [22], 2) learning hand–finger coordinated motion [38], and 3) controlling the timing of motion when controlled with DSs [23]. Additionally, we propose a new approach for modeling the reachable space of the robot arm and for modeling the graspable space of an object, in order to determine the optimal catching configuration. We also exploit the probabilistic nature of this model to query conditional information (e.g., given a position, we can query the best orientation). Finally, this paper proposes a novel approach for learning how to determine the mid-flight catching configuration (intercept point). The experimental validation of this study in which a robot catches in-flight objects with uneven mass distribution (see Section III) is, in our view, the core contribution of this study. We believe that it significantly advances the field, in offering an example of ultrafast control in the face of uncertainty. Although in the past, the field has seen impressive examples of object catching in-flight, they were either restricted to catching simple spherical objects [13], [28], [30]–[32], [44] or to catching objects with a slow changing orientation (e.g., a paper airplane [18]). The speed of computation in the experiments we present here is not the mere effect of having more rapid computing facilities than available in the past; it also benefits from the use of new control laws based on DSs for both the estimation of the flying trajectory of the object and for controlling the robot motion. The remainder of this paper is divided as follows. In Section II, we present the technical details of the methods. In Section III, we validate the method in simulation by using the iCub simulator, and in a real robot by using the LWR 4+. Section IV concludes with a summary of remaining issues that will be addressed in future work. II. METHODS We start by giving an overview of our robotic catching system. As illustrated in the schematic of Fig. 2, the system is divided into two iterating threads. The first thread continuously predicts the object trajectory (to be introduced in Section II-A) and iteratively updates the best-catching configuration and catching time (see Section II-B) with each new measurement of the flying object. The updated catching configuration is set as the target for the robot-arm controller (see Section II-C). The second thread, i.e., the arm controller, continuously adapts the end-effector posture to the changes in the predicted bestcatching configuration and catching time. The arm controller computes the trajectory of the hand in Cartesian space. In our implementation, this trajectory is then converted into joint angles by solving the IK. We evaluate the system first in simulation by using the iCub simulator [39]. Only the upper body of the iCub robot is controlled in this experiment, i.e., we control the robot’s 7-DOF right arm, its 3-DOF waist, and its 9-DOF hand. The simulator uses the ODE physics engine to simulate gravity, friction, and the interaction forces across the body structure of the robot. Second, we validate the system in a real robotic catching experiment by using the LWR 4+ and the 16-DOF Allegro hand [2] as the end-effector. The repeatability of this LWR 4+ is 0.05 mm, the Cartesian reachable space volume in 3-D is 1.7 m3 , and the maximum joint velocity is 112.5–180 ◦/s. The robot is controlled in joint positions at 500 Hz. In the experiments with the iCub simulator, we use a hammer and a tennis racket. For the experiments with the real LWR 4+, we used one empty bottle and one partially filled bottle, a tennis racket, and a cardboard box. A. Learning the Dynamics of a Moving Object We begin by briefly reviewing the method we developed to estimate the dynamics of motion of the object. A complete description of the method with a detailed comparison across different techniques for the estimation is available in [22]. In its most generic form, the dynamics of a free-flying object follows a second-order autonomous DS: ¨ξ = f ξ, ˙ ξ (1) where ξ ∈ RD denotes the state of the object (position and orientation vector of the point of interest attached to the object). We use quaternions to represent orientations, thus to avoid the problem of gimbal lock and numerical drift compared with Euler angles, and to allow for a more compact representation than rotational matrices. ˙ ξ ∈ RD and ¨ξ ∈ RD denote the first and second derivatives of ξ, respectively. N training trajectories with T data points are used to model the dynamics {{ξt,n , ˙ ξt,n , ¨ξt,n }t=1...T }n=1...N . We use support vector regression (SVR) [8] to model the unknown function f(.). SVR [8] performs nonlinear regression from a multidimensional input ζ = [ξ; ˙ ξ] ∈ R2×D to a unidimensional output. As our output is multidimensional, here, we train D SVR models, which are denoted d fSVR ,d = 1,...,D. After training, we obtain a regression estimate given by ¨ξ = fSVR (ζ) =  d fSVR (ζ)  d=1...D (2) d fSVR (ζ) =  M m=1 dαm K  ζ, d ζm  + d b. (3) Only the subset of data points ζm , m = 1 ...M, M <= (N × T) is used in the regression. They are called the support vectors and have associated coefficient αm  = 0, |αm | < C M . C is a regularized constant that determines a tradeoff between the empirical risk and the regularization. In this paper, the optimal value of C is determined through a grid search. The kernel function K : RD × RD → R is a nonlinear metric of distance across data points. It is a key to the so-called kernel machines such as SVR and enables the features to be extracted across data points that would not be visible through Euclidian metrics, such as norm 2. The choice of kernel is, therefore, of paramount importance. In this study, we use the radial basis function (RBF) kernel, K(ζ,ζm ) = exp(−γζ − ζm 2 ) with radius γ ∈ R and determine the optimal values for the open parameters of these kernels through grid search. To enable real-time tracking, the estimated model of the objects dynamics is coupled with an EKF [3] for robustness against noisy sensing. For the trajectory estimation of a free-flying object, simpler models, such as a rigid-body dynamics model, can estimate very accurately the trajectory. However, these techniques usually require modeling all the forces acting on the object and measuring properties of the object, such as its mass, position of COM, moment of inertia, shape, and size. Measuring these values for arbitrary objects (such as a bottle, racket, or a cardboard box) is not a trivial problem. Furthermore, these properties might not even be constant and may change during flight (as it is the case with a partially filled bottle). The machine-learning approach we follow in this paper avoids gathering such a priori information on the object and estimates directly the nonlinear dynamics of the object’s flight from observing several examples of such trajectories [22]. B. Predicting the Catching Configuration We now turn to the problem of determining where to catch the object. As mentioned in Section I, the problem is particularly difficult when we aim at catching the object with a particular grasping configuration. In this case, we must proceed in three steps. 1) First, we must determine how to grasp the object. For this, we show several demonstrations of various grasps on the considered object, and we learn a distribution of possible hand positions and orientations. 2) Second, we must determine the reachable space of the robot that is the possible positions and orientations the robot’s hand can achieve. 3) Finally, we must determine a point along the object trajectory for which we can find a feasible posture of the robot’s hand [using the solution to problem (2)], which will yield a possible grasp [using the solution to problem (1)]. Next, we describe how we achieve each of these three steps. We define η = [ηpos; ηori] as the catching configuration, where ηpos ∈ R3 denotes the end-effector position, and ηori ∈ R6 denotes the orientation that is composed of the first two column vectors of the corresponding rotation matrix representation. The way we represent orientation (ηori) requires more dimensions than the Euler angle or quaternion representation. Expressing orientation by using the rotation matrix, however, has several benefits. First, we can easily rotate the trained Gaussian model in real time by simply multiplying the original model with the rotation matrix, as will be described in Section II-B1. This is highly advantageous for catching tasks that require rapid computation. Furthermore, the rotation matrix representation is unambiguous and singularity free. It can also represent the similarity between orientations more accurately than Euler angle or quaternion representation. For instance, the Euclidean distance between the quaternions q and −q is large; however, the actual orientation is the same. This is important as the closeness between postures is exploited in our probabilistic model to query for regions encapsulating close and feasible postures. 1) Graspable-Space Model: To acquire a series of possible grasping positions and orientations for a given robot hand, we perform grasping demonstrations by passively driving the robot’s hand joint close on the object. We put markers on both the object and the robot hand. Using our motion capture system, we record a series of grasping postures by changing the positions and orientations of the object and the robot hand. The grasping postures are stored in the object coordinate system. We model the density distribution of these positions and orientations using the Gaussian mixture model (GMM) [7]. The trained graspable-space model, objMgrasp composed of K Gaussians, is represented as obj {πk ,μk , Σk }k=1:K . obj denotes the coordinate frame in which the data and the Gaussians are represented. πk , μk , and Σk are the parameters of kth Gaussian and correspond to the prior, mean, and covariance matrix, respectively. These parameters are calculated using expectation maximization [10]. The probability density of a given grasping configuration η ∈ R9 for the graspable-space model is given by P (η|Mgrasp ) =  K k=1 πkN (η|μk , Σk ). (4) A given configuration η is said to be feasible (i.e., it will yield a successful grasp) when P (η|Mgrasp ) exceeds a graspable likelihood threshold ρgrasp . The threshold is determined such that the likelihoods of 99% of grasping demonstrations are higher than the threshold. The number of Gaussians K is determined using the Bayesian information criterion (BIC) [36]. Two sets of grasping demonstrations and their graspable probability contour are shown in Figs. 3, 4, 18, and 19. The likelihood is a measure of the density of feasible grasps in the immediate vicinity. It represents a measure of fitness of a region for grasping. High density (likelihood) in a region results from the fact that this region was more frequently explored by humans; hence, it has a high probability of being a successful grasping location, whereas less- dense regions (likelihood less than a threshold) are bad regions to grasp, as they are rarely seen in the demonstrations. The graspability in these regions is known with much less certainty. As the graspable-space model of the object is expressed in the object reference frame and the object moves, we provide a simple way of changing the reference frame of the model to the robot’s reference frame by using the following transformation: robotμ(t)k = Ω(t) objμk + P (t) (5) robotΣ(t)k = Ω(t) objΣkΩ(t) T (6) P (t) = p (t) zeros(6, 1) . (7) Here, p (t) ∈ R3 and R (t) ∈ R3×3 are the position vector and orientation matrix of the object reference frame (measurement frame) with respect to the robot’s base reference frame; Ω(t) = diag (R(t),R(t),R(t)) is a 9 × 9 matrix whose diagonal entries are R(t); zeros(6, 1) represents 6 × 1 zero vector. For convenience, we will skip the superscriptrobot. Note that in all our experiments, the robot is fixed at the hip, i.e., the robot’s base reference frame does not move. 2) Reachable-Space Model: In order to choose a catching configuration, the robot needs to know that the graspable part of the object is in a reachable space, before initiating the arm movement. To model the reachable space, we simulate all possible motion of the robot’s movement by testing systematically all displacements of its joints. In the case of the iCub, we sample uniformly (ten slices for each joint) its displacement of 7-DOF arm and 3-DOF waist within its respective joint limits. This yielded a total of 1010 feasible postures in end-effector postures. The resulting reachable-space samples for the iCub robot and LWR 4+ are shown in Figs. 6 and 7. We model the probability distribution of these positions and orientations using GMMs Mreach , {πl,μl, Σl}l=1:L . Similarly to what was performed for the graspable-space model, we compute the likelihood of any given pose being reachable. The optimal numbers of Gaussians for the reachable-space model of the iCub and LWR 4+ are determined using BIC [36]. Their BIC curves are shown in Fig. 8. Based on this analysis, the number of Gaussians we determined is 23 for the reachablespace model of the iCub, and 22 for the LWR 4+. To verify the accuracy of the reachable-space models, we randomly sample 1 million joint configurations within the joint limits for each robot and evaluate them. Only 0.12% (for iCub) and 0.13% (for LWR 4+) of samples fell outside the estimated reachable space. In this specific catching experiment with LWR, we discard the reachable samples that are in a condition of z < 0.1 m. This ensures that the robot avoids collision with the table whose surface is the plane z = 0. To build a self-collision-free reachable-space model, we conservatively limit the joint ranges. Furthermore, we also discard the reachable samples in which the palm direction is facing toward the ground. Using this way, we discard the undesirable postures without using any heuristics at runtime. By embedding the set of reachable postures in a probability density function, we directly check if a target end-effector posture is reachable, which saves computational time during execution. 3) Predicting Catching Configuration: The graspable-space and reachable-space models explained previously are statistically independent. Hence, we can calculate their joint probability distribution by simply multiplying the distributions. The joint model M(t)joint, {π(t)j ,μ(t)j , Σ(t)j }j=1:J , has J = K × L number of Gaussians. Each of the J Gaussians are expressed as Σ(t)j = Σ(t)k −1 + Σl −1 −1 (8) μ(t)j = Σ(t)jΣ(t)k −1 μ(t)k + Σ(t)jΣl −1μl (9) π(t)j = π(t)k ηgrasp · πl ηreach · N (μ(t)k |μl, Σ(t)k + Σl) (10) where j = (l − 1) × L + k. In order to find the optimal catching configuration η(t) at a predicted object pose (at a time slice of the predicted trajectory), we use the joint model M(t)joint of graspable-space and reachable-space models. We compute arg maxη (t) P(η(t)|M(t)joint), through gradient ascent on the joint model. The Jacobian of this objective function is given by ∂P η(t)|M(t)joint ∂η(t) = −J j=1 π(t)jΣ(t)j −1 η(t) − μ(t)j N η(t)|μ(t)j , Σ(t)j . (11) We initialize the gradient ascent with the center μ(t)j of the Gaussian that is closest to the current hand pose (Euclidean distance in 6-D), and we solve this optimization problem. The output of the optimization is a hand pose that has the highest likelihood at the time slice. We compute this for each time slice until the predicted end of flight. The optimal catching configuration and catching time is the configuration and time slice with the highest likelihood. Each time we receive a new measurement of the object’s current pose, we again predict the trajectory and repeat the procedure described previously. The lengths of the resultant two directional vectors in η(t)ori are not exactly 1. At each step of the gradient ascent method, we normalize the vectors and orthogonalize them so that the resulting rotation matrix is orthonormal. Theoretically, this is a modeling inaccuracy, but because of the reprojection step onto the set of valid rotation matrices, we get a suboptimal but feasible solution. To reduce the risk that the hand enters in collision with the object, we make sure that the direction of the palm in the catching configuration is opposite from the direction of the object velocity.2 This is achieved by requiring the dot product between the direction of the robot’s palm and the negative velocity of the object to be greater than a threshold as the below constraint: dot η˙(t)pos,η(t)palm < d (12) where η(t)palm is a palm direction vector [for LWR with Allegro Hand, the palm direction is −η(t)ori,x, see Fig. 4(a)]. d is a direction difference threshold constant. In our experiment, d was set as 0.5, which allows for 60.0◦ direction difference. This heuristic constraint greatly decreases the chance of a collision between the robot hand (on the back or side) and the object. The predicted end-effector pose is mapped into the attractor of the DS-based controller that drives the hand toward the target, and the predicted catching time is set as the desired reaching time in the timing controller [23], as we will explain in the next section. 2Because of the rapid nature of this task, it is not possible to detect and handle the collisions in real time as this would require an additional optimization subroutine in the control loop. Performing fast and reactive obstacle avoidance in full configuration space, while adhering to the timing constraints of the task, is an open and difficult problem. In place of doing explicit collision avoidance, we use a heuristic to avoid collisions between the robot fingers and the flying objects. When we determine the best catching posture, we make sure that the palm direction in the catching configuration is opposite from the direction of the object velocity. C. Hand–Arm Coordinated Motion We model the trajectories for the end-effector position ξh ∈ R3 and orientation ξo ∈ R3 by using a DS-based model that is learned using the stable estimator of dynamical system (SEDS) technique [20]. The orientation is parameterized using the scaled axis-angle representation as ξo ∈ R3 ≡ {ξ1 o ; ξ2 o ; ξ3 o }, where the direction ξo represents the axis of rotation, and ξorepresents the angle of rotation. We also encode the hand–finger coupling using the CDS model [38] to ensure the coordinated motion of all joints. This approach consists of coupling two different dynamical systems for reaching and grasping by using an inference model that learns a task metric for hand–arm coupling. In this implementation, we achieve the coupling by using the metric of distance-to-target. Such a spatial coupling between hand and fingers ensures timely closure of the fingers while following the learned dynamics as closely as possible, even in the presence of arbitrary perturbations. Here, we briefly summarize the CDS model and the task execution algorithm. For more details, see [38]. 1) Model Learning: Let ξh ∈ R3 denote the Cartesian position of the hand and ξf ∈ Rdf the joint angles of the fingers. df denotes the total number of DOFs of the fingers. The hand and the fingers follow a separate autonomous DS with associated attractors. For convenience, we place the attractors at the origin of the frames of reference of both the hand motion and the finger motion and, hence, we have ξ∗ h = 0 and ξ∗ f = 0. In other words, the hand motion is expressed in a reference frame attached to the object to be grasped, and the zero of the joint angles of the fingers is placed at the joint configuration adopted by the fingers when the object is in the grasp. The following three joint distributions, learned as separate GMMs, combine to form the CDS model: 1) P(ξh , ˙ ξh |θh ): encoding the dynamics of the hand transport, called the master subsystem; 2) P (Ψ(ξh ), ξf |θinf): encoding the joint probability distribution of the inferred state of the fingers and the current hand position, called the inference subsystem; 3) P(ξf , ˙ ξf |θf ): encoding the dynamics of the finger motion, called the slave subsystem Here, Ψ : R3 → R denotes the coupling function satisfying lim ξh →0 Ψ(ξh )=0. (13) θh , θf , and θinf denote the parameter vectors of the GMMs encoding the master, slave, and the inference models, respectively. The distributions in 1) and 3) above are learned by using the SEDS technique [20] that ensures that the learned DS has a single, globally and asymptotically stable attractor. This, in turn, ensures that the overall coupled system will terminate at the desired targets for both the hand pose and the joint angles of the fingers. The probability distribution in 2) does not represent a dynamic3; hence, it is learned using a variant of SEDS where we maximize the likelihood of the model under the constraint limx→0 E [ξf |x] = 0. (14) Note that the master DS runs independently and the slave adapts accordingly to maintain the desired coupling. This implies that the dynamics of the reaching motion for the endeffector can be altered without having undesirable effects on the coupling behavior. As explained next, in order to intercept the flying object at the desired instant, we use the timed DS controller of [23] for the reaching motion. No change in the other member models of CDS is needed to be compatible with the new reaching dynamics. 2) Trajectory Generation Using Coupled Dynamical Systems: While executing a catching motion, the model essentially works in three phases: Update hand pose → Infer finger joints → Increment finger joints. The end-effector pose is generated independently at every time step by using the master DS. This dynamics is, however, continuously corrected in magnitude with a scalar boost factor so that the robot reaches the catching configuration at the desired instant. The change in the boost factor is then set proportional to the difference between the desired reaching time and the reaching time of the current master DS, which is achieved by integrating the DS forward in time (see [23] for detailed description). Subsequently, the current end-effector position is used to modulate the dynamics of the finger motion through the coupling mechanism explained previously. Such a scheme is desired because it ensures that any perturbation is reflected appropriately in both subsystems. The process starts by generating a velocity command for the hand transport subsystem and increments its state by one time step. Ψ(ξh ) transforms the current hand state that is fed to the inference model that calculates the desired state of the joint angles of the fingers by conditioning the learned joint distribution. The velocity to drive the finger joints from their current state to the inferred (desired) state is generated by Gaussian mixture regression conditioned on the error between the two. The fingers reach a new state, and the cycle is repeated until convergence. Algorithm 1 explains the complete process in pseudocode, and Fig. 9 shows the closure of the fingers when the robot catches flying objects at different speed. III. EMPIRICAL VALIDATION In order to evaluate the performance of the proposed system, we construct two sets of experiments. The first set uses the iCub simulator. The other uses the LWR 4+ platform. In these 1058 IEEE TRANSACTIONS ON ROBOTICS, VOL experiments, the state of the fingers was represented by ξf ∈ R. We use a 1-D finger motion model as this was sufficient for modeling the power grasps used in this study. A. Implementation in iCub Simulator Because of hardware limitations in speed and accuracy on the real iCub humanoid robot, we use the iCub simulator [39]. We simulate two objects: a hammer and a tennis racket. In the simulator, each object is thrown 20 times; we randomly change the initial position with the following range, [−2.5 ± 0.5 0.15 ± 0.3 0.8 ± 0.3] (m). We also vary the translational velocity between [5.0 ± 2.0 0.0 ± 0.3 3 ± 0.5] (m/s), and the angular velocity between [0.0 ± 10 0.0 ± 10 0.0 ± 10] (rad/s). We record the trajectory at 100 Hz. The obtained trajectories are used to train the dynamic model using the SVR technique with the RBF kernel (see Section II-A). We predict the feasible catching configuration and the catching time by using the trained dynamics of the hammer, the graspable-space model (see Section II-B1), and the reachable-space model (see Section II-B2) of the iCub. Various catching configurations of the iCub robot and their orientation contours at the catching position are shown in Fig. 10. The real-time simulation results for the in-flight catching of a hammer and racket are shown in Fig. 11. As real-world uncertainties (such as air drag or measurement noise) are not presented in the simulator, the predictions converge very quickly to the true value and are very accurate. To determine the success rate, we perform 50 throws with random initial position, velocity, and angular velocity in the same range with the training throws. The success rate for catching the two objects in simulation is 100%. Note that we excluded the failed throws (three out of the 50 throws) that are not passed into the reachable space of the iCub. B. Catching Experiment With Real Robot To validate our method on a real platform, we choose the LWR 4+ mounted with the Allegro Hand.4 In the experiments presented here, we use four objects: an empty bottle, a partially filled bottle, a tennis racket, and a cardboard box. In the experiment with a partially filled bottle, we pour 100 g of water inside the empty bottle that weights 33 g. To capture both the position and orientation of the object in-flight, we attached three markers to each of the objects. These were captured using the Optitrack motion capture system from natural point. The position and orientations were captured at 240 Hz. To train the dynamic models of the moving objects, each object is thrown 20 times with a varying initial translational and rotational velocity. The trajectories of the measurement frame virtually attached on the object were recorded. Each recorded trajectory is filtered through a Butterworth filter at 25 Hz. We calculate the velocity and acceleration by using cubic spline interpolation. The minimum and maximum values of initial position, velocity, and angular velocity of the trajectories are shown in Table I in the Appendix. We use SVR-RBF, which are the technique presented in Section II (see [22] for details), to train the dynamics of the objects. The models of the dynamics of each object are trained separately offline; the trained models are stored in text files so as to use the models in a real-time application. Once a dynamics model is trained, we can predict the position and orientation trajectories by measuring the states for a few capturing cycles. The position and orientation accuracy for predictions encompassing 0.5 to 0.0 s is shown in Fig. 12. To show the dynamic complexity of a partially filled bottle, we compare our dynamics model with a rigid-body dynamics model. The COM of the bottle is measured manually. For this comparison, we place the object coordinate system on the approximated COM. We set as mass for the rigid-body model the weight of the partially filled bottle. We approximate the moment of inertia of the bottle with that of a cylinder. Air drag is ignored. Fig. 13 shows the trajectory of the partially filled bottle. Using the superimposed real trajectory, we show the prediction of the rigid-body model and of nonlinear estimate of the dynamics using SVR-RBF. The SVR-RBF predicts the trajectory very accurately. The predictions of the rigid-body dynamics model, in contrast, is very poor, particularly so for the orientation. The discontinuities in the orientation of Fig. 13 come from the singularity of using Euler angles to represent the orientation (note that the real orientation trajectory of the both models are continuous). To learn the graspable-space model, we show demonstrations of possible catching hand configurations to the robot. During the demonstrations (around 15 s, 15 (s) × 240 (Hz) = 3600 catching configuration samples), the positions and orientations of the robot hand and the object are captured using the motion capture system, as shown in Fig. 4(b). Among the recorded catching configurations, 300 samples are randomly selected. The selected samples are trained using GMM. The trained model for grasping a bottle using the Allegro hand is shown in Fig. 4. We also model the reachable space of LWR 4+ by using the method introduced in Section II-B2. Using these three models (object dynamics, graspable-space model of the object, and the reachable-space model of the robot), we predict the best catching configuration and the catching time. We use the CDS model, explained in Section II-C, to execute the motion of the arm toward the predicted catching configuration. The dynamic models for the end-effector position and orientation are learned by using kinesthetic demonstrations (see Fig. 14). In order to obtain a fair coverage of the reachable space of the robot, we take demonstrations by starting always from a fixed configuration of the robot, which is also the starting configuration during the catch executions. The demonstrations terminate at several catching configurations in the reachable space of the robot [see Fig. 14(b)]. Although more demonstrations imply a better coverage of the reachable space, hence more reliable path generation, in practice, we find that around 20 demonstrations give a reasonable performance. In order to handle different starting configurations, one would need to collect more demonstrations starting around those configurations. The hand–arm coupling model is learned from a separate set of demonstrations taken by tracking both the object (using the motion capture system) and the joint angles of the fingers (using 5DT data-glove) synchronously, while a human is catching the object. Note that we separate the demonstrations for learning the master DS from the slave DS and the inference model. This is to facilitate ease of demonstration as kinesthetically controlling the position, orientation, and the joint angles of the fingers, all at the same time, is a tedious task. In addition, it is not possible to learn the position/orientation dynamics solely using the latter procedure [see Fig. 14(d)], as this would require a remapping of the human data to the nonanthropomorphic LWR arm. Fig. 15 shows the learned member models of the CDS formulation, i.e., the end-effector position represented by ξh ∈ R3 ≡ {ξ1 h ; ξ2 h ; ξ3 h }, the state of the fingers represented by ξf ∈ R, and the DS encoding the orientation trajectories in the scaled axis-angle representation ξo ∈ R3 ≡ {ξ1 o ; ξ2 o ; ξ3 o }. The predicted catching configuration, calculated by the above best catching configuration prediction module, is fed as the target for the position and orientation DSs. The fingers are controlled as the slave subsystem coordinated with the endeffector position with respect to the predicted catching configuration. The end-effector and finger joint trajectories generated by our model adapt to the predicted catching configuration that is updated at every control cycle. The robot continuously adapts the arm and finger motion as the prediction of the final catching configuration improves over time. The output of the position and orientation of the DS is converted into the 7-DOF joint state using the damped least squares IK. We simply choose conservative joint limits for the IK which, in turn, ensure no self-collision. The resultant joint angle is filtered by a critically damped filter to avoid high torques, and the robot is then controlled in joint positions at a rate of 500 Hz. The snapshots of the real robot experiments are shown in Fig. 17. An example of robot end-effector trajectory according to object measurements and predictions of catching posture is shown in Fig. 16. To compute the rate of success, we throw the empty bottle, the partially filled bottle, the racket, and the cardboard box 20 times each. The prediction of the flying trajectory can start only once the object is visible, i.e., once it enters the region tracked by the motion capture system. This corresponds to an area about 3.5 m from the robot. The average flying time across all trials for the four objects is 4.97 ± 0.46 (mean ± standard deviation) s. Out of 80 trials, we exclude nine trials that never enter the reachable space of the robot. The robot successfully caught the object 52 times out of 71 total trials, yielding a 73.2% success rate. Failures come in three categories. The first cause of the failures is due to the IK solution for the best catching configuration. If the resulting joint configuration is far away from the initial configuration, the robot cannot reach the target on time, even with its maximum attainable velocity. The CDS and our timing controller generate the Cartesian space end-effector trajectory to bring the end-effector to the target on the desired time, even for the unrespectable prediction change or the dynamically infeasible target. However, as our CDS in Cartesian space does not take into account the limits of robot in joint space (e.g., joint velocity or torque), it is possible that the robot cannot reach the target at the desired time. This consists of 12 of the 19 failed attempts. Another cause of the failures is when a finger hits the object, which in turn causes the object to bounce away. This happens rarely, and we observe this in four out of 19 failures. The other failures (three out of 19) are caused by violations of the joint torque limits (the robot automatically stops its motion when one of the measured joint torques exceeds the limit). To compare the success rate of LWR 4+ with a human, we performed a catching experiment with a human with the same constraints as the above robotic catching experiment. Ten untrained subjects (seven males and three females, all of whom are right-handed and between 25 and 32 years old) are asked to stand next to the robot and to catch the object with their right arm, using nothing else than their hand (e.g., all successful catches where the subject catches the object using his chest or upper arm as support are considered to be failed attempts). Stepping motions are not allowed either. We throw the empty bottle ten times each, totaling 100 throws. The humans successfully caught the object in 38 out of 100 trials, yielding an overall success rate of 10% for the poorest subject to 70% for the best subjects. IV. DISCUSSION AND CONCLUSION In this paper, we have presented a framework to teach a robot how to catch in-flight objects with 1) rigid but uneven mass distributions and 2) nonrigid mass distributions. Emphasis is placed on allowing the robot to acquire each step of the process, either through observation of human demonstrations or through exploration. This core learning approach enables us to implement the catching task on two robotic platforms with different kinematics, and for four objects with different motion dynamics. The learning framework is based on three modules. To estimate the trajectory of complex flying objects, we build a model of the translational and rotational motion by using about 20 examples in which each object is thrown by a human demonstrator (see Section II-A). In order to determine the final catching configuration, we develop a data-driven probabilistic approach both to estimate a distribution of admissible grasping posture on the object and to compute the robot’s reachable space. We show that these techniques enable us to determine the optimal catching configuration in real time (see Section II-B). To generate the robot arm and finger motion to intercept the object, we use CDS and a timing controller (see Section II-C). To validate and show the general nature of our method, we perform two different experiments on both the iCub robot (in simulation) and the LWR 4+ mounted with an Allegro hand (in real world), very different in terms of the configuration space. We use four objects with very complex dynamics (e.g., a partially filled bottle), which leads to a variety of catching configurations that are difficult to predict and calculate. The average success rate for catching an object in iCub simulation is around 100%, and for the real experiment of LWR 4+, it is approximately 73%. The real robot experiment results are considerably higher than the catching success rate for humans (38%). To predict the trajectory of the free-flying object, the SVRRBF method [22] models the dynamics of the object accurately enough for this catching task but only locally (generalization could be inaccurate far away from the demonstrated states). For example, if an object is thrown in a fashion that is considerably differently compared with the demonstrations, the predicted trajectory might be inaccurate. This effect is more pronounced for objects with high nonlinearity in the motion, e.g., a partially filled bottle. Prediction errors such as the above can possibly lead to an incorrect prediction of the catching configuration. This, in turn, can lead to a catching failure because the robot will start moving in the wrong direction until a better prediction is available. However, as new measurements of the object posture are collected and the future trajectory is reestimated, the catching configuration prediction error is reduced gradually. We use human demonstrations to model the graspable space around an object. Teaching a robot where to grasp via human demonstrations is simple and intuitive. It does not require any prior knowledge about the exact shape, material, and weight of the objects to be grasped. However, only the demonstrated parts of an object can be modeled as possible catching points. We use probabilistic techniques to model the reachable and graspable spaces. As introduced in Section I, several ways exist to model the reachable space, e.g., numerical modeling, databases, or density-based modeling. To our knowledge, however, there are no generalized methods for building a continuous model of the 6-D reachable and graspable space and that can be queried in real time. Using a probabilistic encoding to model the graspable and reachable spaces has several benefits. It provides us with a notion of the likelihood from which we can determine the most likely catching point. It can easily be rotated and translated so as to perform the computation online in the moving object’s frame of reference. To ensure timely and rapid computation time, whenever possible, we find closed-form expressions for each computational step. We show that the overall computation is extremely rapid, thus enabling us to compute the best catching configuration in around 0.2 ms (on 2.7-GHz quad-core PC) and to catch objects when the overall flying time does not exceed 0.7 s. The choice of modeling reachable and graspable space with positive examples is inspired by the one-class classification scheme where there are only data from the positive class, and there is an attempt to fit a boundary around it as tightly as possible. Although this procedure can generate some false negatives (feasible regions decided as infeasible by the model), it is highly unlikely to generate false positives (infeasible regions decided as feasible). The frequency of such errors can be further decreased by making the threshold (currently 99%) even lower. We find that, in practice, setting the threshold to 99% does not yield to sample infeasible regions. As we model the reachable space through a joint-probability distribution, we can compute conditional probability on all variables. For example, when a robot needs to grasp a static object at a specific position, the feasible orientations can be computed simply by conditioning the orientation on the position. We can also compute the likelihood of each of the marginal distributions to determine separately the likelihood of the position and orientation. We can, for instance, determine the reachability of a given 3-D position while ignoring orientation. This can be useful when only the position is relevant, such as when catching a ball. This is, as far as we are concerned, a very challenging catching task; there are many aspects in the methods presented here that need improvement. For starters, we consider only catching motions that stop at the target. This results in the object bouncing off after hitting the robot’s hand. This is undesirable, especially as the object can produce a strong impact force on the hand, which can lead to damage. Addressing the shortcomings with compliant catching will be our next challenge. As mentioned in the main text of the paper, we do not explicitly compute collisions, before catching, between the object and the hand and arm. Although we prevent this from happening through simple heuristics (opposite orientation of the palm to the object velocity vector), this is not sufficient and leads to a few cases of failures in the experiments. We conservatively limit the joint ranges to avoid self-collision when modeling the reachable space and in solving IK. This reduces the usable reachable space of a robot. Recently, a real-time optimization method was applied to a robotic catching task to avoid self-collisions and environment-collisions, to avoid joint limits (position and velocity), and to find smooth joint angle trajectories. However, it requires a large amount of computational power (Bauml et al.[4] use external 32-core high-performance computer in a ball catching experiment). Indeed, computing obstacle avoidance in real time for catching complex objects is a very challenging task, and we do not yet have a solution to this problem. These issues are open issues in robotics, and we consider them as future work. The graspable model is used solely to learn power grasps. Precision grasps might be interesting for catching very small objects. It would be possible to extend the GMM approach to embed a representation of the grasping points on each finger, as a triplet, by expanding the space of control. Finally, and perhaps most importantly, we model solely the dynamics of the task and do not model the robot’s dynamics. As a result, some of the trajectories generated by our CDS model lead to generate velocities that the robot could not follow. This is the third cause of failure to catch the objects in the real experiment. A potential direction to address this issue would be to generate dynamically feasible trajectories from optimal control (in place of using human demonstrations) to populate the CDS model with examples of motion that satisfy the dynamics of the robot. These problems remain for potential resolution in future work. Abstract: Direct milling of sand molds is an important development in rapid manufacturing of sand molds. Direct milling is an effective method for manufacturing single or small batches of cast parts. This paper describes experimental investigations to find sand blocks with the appropriate strength, to describe wear patterns of different tools (high-speed steel (HSS), carbide, and polycrystalline diamond (PCD) tools), and to analyze sand mold cutting mechanisms. The results show that the PCD tool outperformes the other tools in terms of tool life. Average flank wear and micro-tipping are the dominant tool failure modes in the sand mold milling process. With a flank wear limit of 0.3 mm, the PCD tool works continuously for about 70 h under the experimental conditions. The experimental results show that the cutting mechanism for direct milling sand molds differs from metal cutting. Introduction Casting has been extensively applied in various industries, enabling rapid development of non-ferrous castings for automobile, aviation, and aerospace. However, traditional production methods for large quantities of casting molds are not cost-effective, not flexible and enegy intensive due to the conventional moulding or core-making method. Moreover, analyses show that the moulding and core-making processes create 30%-60% of casting defects critical to high-quality castings[1]. As a result, casting mold production plays an important role in casting fabrication. Genarally, casting mold production can be divided into conventional methods based on dies and rapid sand mold manufacturing based on layered manufacturing methods[2-4]. Although rapid prototyping methods make the process easier and more accurate, these methods are still more time consuming than desired or have practicality limitations. In addition, many of these methods only produce prototypes of wax, plastic, or paper/wood, which are insufficient for most laboratory testing[5-8]. For manufacturing, component samples must be verified before full production to reduce lead times and costs. The development cycle can generally be categorized into conceptual modeling, detailed design, prototyping/testing, manufacturing, and product release. Changes in the conceptual modeling stage are cheapest, while changes at the product release stage are most expensive[6-8]. Therefore, the quicker a prototype can be used in testing or verification, the more changes a manufacturer can make before it is manufactured or released to the marketplace. Thus, new mold making methods are needed that do not require high manufacturing speeds. With the development of numerical control (NC) technology, directly milling has been used to create sand molds of castings which are adapted to a competitive environment and are bringing momentous changes in foundries. This method, which avoids mould making, eliminates work steps, and reduces allowances, is suitable for single and mini-batch casting production, especially for fabrication of large castings. Some companies, for example ACTECH and METROM, have applied this technology to production. The Advanced Manufacture Technology Center of China Academy of Machinery Science & Technology (CAMTC) has also created a forming machine that produces high quality sand molds. 1 Experimental Procedure The purpose of the experimental work was to observe the tool wear behavior of different cutting tools and to study the mechanisms for milling sand molds. Washed silica sand with a binder and ester curing agent was used as the experimental materials. The silica sand properties are listed in Table 1. The properties of the binder, a new colorless, tasteless, and pollution free water-glass are listed in Table 2. The ester curing agent properties are given in Table 3. The experimental equipment consisted of a threeaxis milling machine, a blowing sand system, CAD software, and an NC system. The machining range was 800 mm×600 mm×250 mm. The axis location error was ±0.05/300 mm and the reposition error was ±0.03 mm/full-stroke. The high-speed steel (HSS), carbide and polycrystalline diamond (PCD) tools were used for the milling. The milling sand mold tests were conducted in three steps. (1) The sand block was prepared by first premixing the silica sand and the water-glass binder for 40 s and then for 30 s with the ester curing agent. Then, the mixture was poured into a 260 mm×260 mm×50 mm moulding flask to form a sand block. (2) The hour and the final strength of a standard tensile and a compressive sample were measured on a hydraulic strength testing machine. (3) The sand mold was then measured to evaluate the tool wear. The flank wear on the tools was measured after certain machining intervals using a measuring microscope. The wear criterion was flank wear (VB = 300 μm) corresponding to an edge decline of 0.03 mm. The worn region of the tool was also analyzed. 2 Experimental Results and Discussion 2.1 Sand block strength Figure 1 shows the tensile strength as a function of curing time for water-glass/silica sand ratios of 2.5% or 3% and curing agent/water-glass ratios of 15% or 20%. The compressive strengths were shown in Fig. 2. The tensile strength ranges from 0.4-0.55 MPa while the compressive strength reaches 2.7-3.1 MPa with 48 h of curing time, regardless of water-glass or curing agent ratios. In addition, for the same curing time, the compressive strength increases as the water-glass sand block ratio increases. The experimental results also show that during the initial sand block curing stage, the tensile strength and the compressive strength are so low that the cutting performance is quite poor. The sand block strength increases with the increasing curing time and the machining properties improve. The sand block has good cutting performance at a curing time of 48 h. 2.2 Tool wear The flank wear HSS, carbide, PCD tools in Fig. 3 show varying tool-wear progression for the same cutting conditions (cutting speed of 30 m/min, cut depth of 1 mm, and feed speed of 50 mm/s). The wear progression for the HSS tool and the carbide tool are similar with the flank wear increasing gradually during cutting before reaching a wear of 0.2 mm. The PCD tool displayed less tool wear than the other tools. When the flank wear reached 0.3 mm, the HSS tool could cut continuously for 2 min, the carbide tool for 8 min, and the diamond tool for about 70 h. Then, the PCD tool is recommended as the most suitable tool material for The tool wear patterns were also monitored during the tool wear progression. The experiments show that the wear was greatest on the rake and flank faces during machining. Early in the cutting, initial breakdown in the HSS tool cutting edge was observed as shown in Fig. 4 with only flank wear which increased rapidly. Then, the flank wear became constant, with crater wear appearing on the rake face which is typical of abrasive wear. Finally, the tool wear became uncontrollable, leading to tool tip failure. The wear on the carbide tool on the flank face is shown in Fig. 5, which appeared to be triangular at the tool tip. Thus, the tool tip should have edge rounding for direct sand mold milling. Although the PCD tool had a better cutting performance than other tools, the hard sand particles caused micro-chipping of the PCD tool as shown in Fig. 6. The phenomenon may occur as the diamond particles are abraded by the SiO2 in the sand block. Friction during machining of the sand mold is more serious than during metal cutting. Although the PCD tool has good wear resistance, small chamfering of the surface with a clearance angle of 0° may occur on the flank surface. The tool wear experiments show that the PCD cutting edge life is longer than that of the carbide or HSS tools, but impact loads which exceed the tool strength lead to micro-chipping or breakage. 2.3 Cutting mechanism An analysis on the curing mechanism of the waterglass sand is necessary to understand the milling mechanism for the casting mold. Ester curing of the water-glass sand includes physical and chemical hardening. Acid and alcohol precipitated after the organic ester hydrolyzed, and then the acid and sodium silicate reacted. At the same time, free silicate and salt were produced, which cause the sodium silicate to change into silicasol. Thus, the water-glass sand rapidly solidified. Alcohol has such a high affinity for water that dehydration of the sodium silicate can be accelerated during curing[9]. When the sodium silicate sand mixes with silica sand, the sand particle can create a flat water-glass film, with neighboring sand particles forming binding bridges as shown in Fig. 7. In this way, the gelling process builds up the bond strength. The bond strength of water-glass sand mainly depends on the strength of the sand grain and the sodium silicate and the bonding strength between the sand and the sodium silicate[10]. Therefore, milling sand mold mechanism with a low cutting force is different from that of metal cutting which includes elastic deformation, plastic deformation, and fracture. A schematic diagram of the cutting of a sand block is shown in Fig. 8. The machining of a sand block with binder is a serious of interrupted cuts. The essence of the mechanism is that sand on the cutting layer is compressed by the rake face，following by shearing stress of the bond bridge. As the tool moves along v direction as shown in Fig. 8, the shearing stress reaches the critical bonding strength and the bond bridges between the sand grains break. Then, the sand grain extrudes along the crack. The strain is then less than that of metal cutting, because of the sand block structure and the small cutting deformation. 3 Conclusions An experimental study of the cutting of a sand block shows as follows: (1) Direct milling of a sand mold is effective for single and mini-batch production of casting molds, especially for large castings. (2) Flank wear and micro-tipping are the dominant tool failure modes during the milling of sand molds. The main tool wear mechanism is abrasion by the SiO2 particles in the sand block. Abrasion of the cutting tool depends on the sand particle size and the bond strength in the sand block. (3) Tool wear tests with three kinds of tool materials show that the PCD tool has better cutting performance than the others and is suitable for sand mold milling. (4) The mechanism for the milling of casting molds involves less cutting force which differs from that of metal and wood manufacturing. Abstract—Fully electric cars are now available. This technology offers exciting opportunities, especially to citizens of developing countries in equatorial regions having high concentrations of solar energy. The major motivation behind adoption of electric vehicles is reduced CO2 output. However, most electric vehicle batteries are charged by electrical grids powered by coal and oil, which themselves produce significant amounts of CO2. Charging electric vehicles with solar energy can dramatically reduce CO2 generation. The authors have demonstrated a low-cost electric vehicle charging station using 4 solar panels of 255 watts each, batteries, a charge controller, and an inverter. For 3 months, a SMART Electric Drive automobile was successfully charged using only solar energy. The proposed Sun-Car System presents a low-cost opportunity for poorer populations such as those found on Indian reservations in the southwestern United States and tribal Africa. Communityowned electric vehicles could be charged solely with solar power. The demonstrated off-grid solar charging system is relatively low-cost, and would not require an electrical grid or an expensive gasoline/diesel delivery infrastructure. Keywords: — solar; electric vehicle; battery charging; solar power. I. INTRODUCTION A. Motivation According to the MIT Technology Review, 1.5 billion people on this Earth currently lack electricity, and this in the 21st century [1]. Nearly seventy percent of the population of sub-Saharan Africa, approximately 600 million people, is without electrical power [2]. Many people on Indian reservations in the United States also lack access to electricity. While such communities can have shared vehicles, these must often be driven to far away locations in order to be refueled, and additional costs are incurred with each refueling. The emergence of commercially available electric vehicles and reduced costs of solar panels and wind turbines offers solutions to both of these problems, especially in regions rich in solar energy, where electric vehicles or plug-in hybrids can be charged using an off-grid, low-cost solar charging station. Such a simplified transportation system does not require fuel to be obtained or delivered from far-away places, and does not incur additional fuel costs once installed. If the vehicle and charging station are obtained by federal grant or through a charitable organization, the costs to the community are minimal. B. Background In developed nations, the electric car is often viewed as an adult toy – a novelty rather than a necessity. In underdeveloped regions, on the other hand, a low-cost transportation system based on solar or wind energy could significantly impact the entire economy. At the end of 2013, about 36 GW (peak) of solar photovoltaic (PV) systems were installed in Germany. This corresponds to about 150 million solar panels. Due to limited sunlight and low solar panel efficiency, one megawatt of installed solar power in Central Europe collects approximately one gigawatt-hour of electricity annually. While the global annual horizontal irradiation in Germany is about 1000 kilowatt-hours per square meter, it is 2.5 times higher in most areas of Africa – about 2500 kWh/m2 [16]. In addition, the shadow cast by a solar panel supplies some shade, and therefore cooling power. While this is not needed, or even desired, in northern countries, the added feature of shadow generation is welcome in the deserts of Southwestern USA or in Africa. Assuming the cooling effect of the shadow produced by the solar panel is between 500 and 1000 kWh/m2 , a solar panel installed in Africa is then 3 to 3.5 times more effective than in Central Europe. This solar panel cooling effect can also be critical to the adoption of electric vehicles in very warm areas, since the lifetime and efficiency of lithium-ion batteries are negatively affected by heat. Parking electric vehicles under solar charging panels can extend the lifetime and performance of electric vehicles in underdeveloped nations, thereby reducing overall costs. II. ELECTRIC VEHICLES A. Advantages More and more plug-in electric (hybrid and non-hybrid) cars are coming to the market. Currently, these include the 2- seat SMART Electric Drive, the Ford Focus Electric, the Chevy Volt, the VW E-Golf, the Nissan Leaf, the BMW i3, the Opel Ampera, the Toyota Plug-in Hybrid, the Tesla, the Honda Civic Hybrid, and others. Most of these cars are charged by the electric grid. However, replacing gasoline with electricity from a national grid does not necessarily lead to a significant reduction in carbon footprint since, in the USA at least, more than half of the nation’s grid power still comes from coal, oil, and natural gas. A main advantage of an electric motor is its higher efficiency compared to a combustion engine. Let’s look at the fuel costs. The EPA/DOT fuel economy for the Smart Electric Drive (according to the data sheet) is 107 MPGe, or 32 kWh per 100 miles. MPGe means miles per gallon of gasoline equivalent and is used by the ...U.S. Environmental Protection Agency to compare energy consumption of alternative fuel vehicles, plug-in electric vehicles, and other advanced technology vehicles with the fuel economy of conventional internal combustion vehicles expressed as miles per U.S. gallon [3]. Since a gallon of gasoline contains approximately 33.7 kWh of energy [4], the following numbers are obtained for the SMART car: • SMART-for-Two, 2008, Gasoline Engine: 38 miles per gallon, or $0.10 per mile (assuming a fuel cost of $3.80 per gallon); • SMART ED (Electric Drive), Grid-Tied: 107 MPGe; 0.32 kWh per mile, or ~$0.05 per mile (assuming a cost of electricity of $0.16 per kWh); • SMART ED, Sun-Car, Off-Grid, after pay-off of charging station: $0.00 per mile The gasoline engine produces about 8.9 kg (19.6 lbs) of CO2 for every gallon of gasoline, or every 38 miles of driving. Thus, about half a pound of CO2 is produced for every mile driven. This is reduced to 0 pounds per mile if an electric vehicle is powered by solar energy. In this case, CO2 emissions are reduced by about 25,000 pounds (more than 11 metric tons) for every 50,000 miles driven. Other advantages of electric vehicles include their more simple construction compared to gas-powered cars, (e.g., oil changes are not necessary), and features such as regenerative braking, which leads to a further increase in efficiency. B. Challenges The main problems of electric vehicles are the limited charge content (miles per charge) and the high price of their batteries. A great deal of research is going on worldwide to improve both parameters. Most electric cars have lithium ion batteries that may experience temperature-related problems or failures in very hot areas such as Arizona or Africa. Clever cooling solutions will no doubt be developed in time. Further, several advances and improvements in battery technology are on the horizon. Some of these are discussed by K. Bullis in MIT Technology Review [5, 6]. For example, nanostructures are eventually projected to lead to a five-fold increase in battery life [6]. These improvements are, however, several years out. Challenges are also introduced by battery charging procedures. There are basically two technologies: Conductive charging, which is used in most cases [7], and dynamic wireless charging [5]. In general, there exist three systems that yield different charging times: • Level 1 charging: 120 VAC, 60 Hz. • Level 2 charging: 240 VAC, 60 Hz. • Level 3 charging: 400 VDC, 0 Hz. Certainly, as pointed out by Zehner [9], the ability of electric vehicles to reduce greenhouse gas emissions is often overstated, especially in northern industrialized nations, where the available solar energy is limited. In hot, equatorial regions, however, solar panels are much more effective and collect more energy, making this a different case entirely. In these areas, the environmental manufacturing costs associated with electric vehicles, lithium-ion batteries, and solar panels are quickly negated. Moreover, better and lower-cost solar cells can be expected in the future. A Boston-based company, 1366 Technologies, claims they can make solar cells at less than half the cost of current cells [10]. Their starting material is molten, fluid silicon. C. North and South While it may be obvious, one of the reasons why industrial nations are located in northern regions is simply because it is easier to work in cooler climates. Many underdeveloped nations are located in southern or equatorial and large desert areas. These locations receive the most solar energy. Living conditions in parts of Africa would appall many. For example, in an eastern African country close to the Equator, there is a village with about 700-800 inhabitants living in about 250 grass covered huts. The latter have no flowing water and no electricity. There are no railway or ship connections, no gasoline cars, no taxi or bus services, no gas stations, no electrical grid, etc. Similar situations can be found in many southern developing countries [11]. The introduction of a few electric cars operated with offgrid solar energy could become a real game-changer with relatively little investment capital. The cost of the off-grid charging station can be a fraction of the price of an electric vehicle, maybe 10-15%. Community-shared electric vehicles could provide transportation for an area inside a 60-100 mile radius. No expensive infrastructure (gasoline pump stations, tankers, etc.) is necessary. Organizations such as Power Africa or the U.S. Africa Development Foundation (ADF) could donate a few electric cars. This system would also fit nicely into the ADF’s so-called Off-Grid Energy Challenge [12]. The status of solar energy use in Africa is described by the following headline: Uganda slow at seizing solar energy opportunity amid high energy costs [13]. However, help is on the way. For example, the U.S. government plans to spend $7 billion to electrify sub-Saharan Africa in the next 5 years [14]. III. PROPOSED SOLUTION The implementation of conventional transportation systems requires a lot of capital that developing countries generally do not have. Even in industrial nations such as the U.S., most consumers still opt for gasoline-powered vehicles. This is due in part to the higher cost of electric vehicles and their relative novelty, which leads to the sense that electric vehicles are still somewhat unproven and risky. This sentiment is borne by the facts: In 2013, 15.5 million cars were sold in the U.S., but only 96,552 of these were primarily electric vehicles [15]. However, due to the abundance of solar energy in hot areas, the combination of electric cars and off-grid operated solar charging stations could provide an almost ideal solution to the existing transportation problem in these areas. Compared to conventional on-grid charging, this system has the advantage of reducing the carbon footprint to almost zero once installed. A. The Sun-Car Kit MTECH Laboratories has developed and tested a low-cost, off-grid, easy-to-install solar charging station prototype called the Sun-Car Kit. A simplified block diagram is shown in Fig. 1 and a photograph of the initial assembly in Fig. 2. Four 255-watt (peak power) solar panels (1020 Wpk) from Solar World were used. This unit can be used at any workplace or close to the home if space is available. The solar panels can either be mounted on the ground as shown in Fig. 2, or on a scaffold-like structure under which the electric vehicle could be parked during charging, as shown in Fig. 3. This also serves to protect the car and its batteries from the sun and to keep them cool. Excess solar energy, for example when the car is not being charged, is stored in a battery bank. In this prototype, 4-6 deep-cycle marine batteries (type 27) were used. The batteries also provide excess power while charging the SMART car with about 900 W. A charge controller is inserted between the solar panels and the batteries in order to protect the latter. The 24-VDC system feeds a 2- kW pure sinewave inverter that provides 120 VAC at 60 Hz. For a three-month period, a SMART Electric Drive vehicle (model For-Two) was charged strictly from the prototype solar charging station, without any power delivered by the grid. Depending on the Upstate New York weather and cloud cover between August and November (2013), 1-4 kWh could be collected each day. One kWh translates into about 3.2 miles of operation. More solar panels could, if necessary, be added. The system could also be combined with wind turbines to further enhance energy generation. Workplace charging stations benefit from the fact that they collect solar energy 8-12 hours per day, even when cloudy. Until power grids are energized by completely renewable energy sources, the proposed off-grid charging system provides an attractive solution to the powering of electric cars as far as carbon footprint reduction and costs are concerned. IV. COSTS The cost of one kilowatt (installed power) obtained from the sun has dropped more than 100 times from $76,670/kW in 1977 to about $740/kW in 2013 [18]. Assuming this power is available for 8 hours of the day on average, a 1-kW solar array should yield around 8 kWh per day – about 25 miles per day or just over 9,300 miles per year for the SMART Electric Drive (3.2 miles/kWh). Using Uganda as an example with its fuel cost of $5.40/gallon [19], the equivalent annual gasoline cost at 38 mpg is around $1325. Assuming the complete charging station (including storage batteries, solar panels, inverter, and so on) can be purchased for under $3,000, the solar charging station could pay for itself in about two years. In the third year and beyond, fuel costs would be zero. The cost of solar panels will certainly continue to drop. In addition, there is a worldwide effort to reduce the cost of lithium-ion battery technology, which will lead to the availability of lower-priced electric vehicles in the near future. On the other hand, the economic benefits of giving remote populations a means of traveling to nearby cities should be considerable. A vast amount of energy is unnecessarily wasted every day. According to the US Bureau of Transit Statistics, there were around 251 million registered passenger vehicles in the United States in 2006. Of these, about 99 million were SUVs and trucks. Yet almost all of these 251 million cars are designed for transporting 5 to 7 passengers and therefore weigh about 3 to 4 thousand pounds. The average American family owns two such cars. This arrangement can be called the 5/5 System. But most people never consider the fact that the vast majority of all trips (estimated at 98% to 99%) are made with only one or two passengers. Thus, hundreds of millions of miles are driven each day by only one or two people (100-400 lbs of cargo) in automobiles designed for 5 to 7 people (3,000- 4,000 lbs of vehicle). The 2-seat SMART Sun-Car-Kit supports the so-called 2/5 System. The idea is simple: Instead of owning two heavy and inefficient cars designed to carry an entire family, the average family would own one conventional 5- to 7-seat car and one small and fuel-efficient two-seat car weighing half as much (hence the term 2/5 System). The small car would be used for daily commutes and the larger one for family excursions. This will drastically reduce the fuel consumption for personal transportation (by as much as an estimated 30%- 50%). Based on their size and weight, smaller plug-in electric vehicles, in theory, require less charge to run a given number of miles, especially in suburban or urban settings. Thus, the solar charging station will provide greater mileage to smaller cars, especially 2-seaters such as the SMART Electric Drive. The availability of this 2-seat electric car (and others are sure to follow) enables the 2/5 System. VI. SUMMARY AND CONCLUSIONS In 2013, the U.S. populace bought 160 times more gasoline/diesel cars than electric cars [15]. This will no doubt change dramatically as electric cars become more ubiquitous, are proven through long periods of ownership and use, and are improved in both cost and performance. The range limitation will also become less of a factor as battery performance is enhanced. This opens the door to off-grid charging stations. MTECH’s Sun-Car Kit is a low-cost, easy-to-install, offgrid solar charging station for electric vehicles, which can be easily expanded by simply adding more solar panels. Significant savings in fuel and/or electricity costs and a reduction of CO2 emissions are possible. The system is especially well-suited for work-place commuting, wherein electric vehicles could be charged by an on-site, off-grid charging station during working hours, yielding enough charge for the drive home. Because of its low cost and simplicity, the demonstrated Sun-Car Kit could provide a tremendous opportunity for all hot areas with underdeveloped or non-existent personal transportation systems. Even in developed nations, farms and rural areas could benefit from the technology. The solar electric vehicle charging station is also an excellent teaching tool for high-school and college students, who need to understand the concepts of volts, amperes, watts, kilowatt-hours, miles per gallon, MPGe, and the intricacies of solar collectors, charge controllers, batteries, kilowatt inverters, and of energy and transportation systems in general. This idea is certainly not new. Solar charging stations for electric vehicles already exist in places such as New Mexico and Arizona, Mississippi, and even Maine [20-22]. However, the concept is especially promising in developing nations and areas. The introduction in these regions can have a profound effect in raising the quality of life for vast populations around the world, which, in turn, will bring new educational and economic possibilities to millions. This can only benefit the world as a whole. Abstract: For precision machining, the hard turning process is becoming an important alternative to some of the existing grinding processes. This paper presents an analytical model for predicting cutting forces in hard turning of 51CrV4 with hardness of 68 HRC. The cutting tool used is made from cubic boron nitride (CBN) with a wiper cutting edge. Formulas for differential chip loads are derived for three different situations, depending on the radial depth of cut. The cutting forces are determined by integrating the differential cutting forces over the tool-workpiece engagement domain. For validation, cutting forces predicted by the model were compared with experimental measurements, and most of the results agree quite well. Key words: force prediction; hard turning; wiper tool cutting edge Introduction In the field of precision machining, hard turning with a geometrically defined cutting edge has in recent years become an attractive alternative to the grinding process. Compared to grinding, the hard turning process has many advantages, such as higher flexibility, shorter cycle times, lower cost, and a higher material removal rate[1-4]. Being a relatively new process, hard turning has received much less attention in the literature compared to conventional turning, for which significant research has been performed in the area of mathematical process modeling[5,6]. The currently available literature on hard turning is focused mostly on experimental evaluation of the process[7-10]. Ng et al.[11] have developed a finite element method (FEM) model, but it predicts the temperature and forces only for orthogonal hard turning. As they clearly state in their paper, obtaining the required workpiece material properties is always difficult, and the FE modeling technique suffers from slow computation time. At present, therefore, suitable detailed mathematical models for the mechanical aspects of the hard turning process are mostly missing from the literature. In this paper, the mechanical aspects of the hard turning process are analyzed. Using the method given by Altintas[12], a mathematical model is established for predicting the cutting forces in the hard turning process. First, differential chip loads and differential cutting forces are determined in the hard turning operations. Secondly, the discrete cutting forces are integrated over the tool-workpiece engagement area in order to get the cutting forces in three orthogonal directions. The predicted cutting forces are also compared with results from validation experiments. We should note that due to the use in the model of certain parameters obtained from calibration tests, this model can only be used to predict the cutting forces in hard turning process where the cutting material and the workpiece material are the same as those used in the calibration test. 1 Model Construction 1.1 Engagement of the cutter and workpiece The cutting tool used in the model has a wiper cutting edge. Instead of a full radius at the nose, the wiper insert has small flats at the tangent contact surface where the surface finish on the component will be achieved in turning. Compared to a standard full radius insert, there are many advantages to using a wiper tool, such as higher productivity, better surface finish, and longer tool life[13,14]. For describing the engagement of the wiper cutting tool and the workpiece, the geometry of the insert was measured (Fig. 1). The cutting edge of the insert can be simulated by a combination of two arcs with radii of R = 5.7 mm (the Big arc in Fig. 2) and r = 0.798 mm (the Small arc in Fig. 2). 1.2 Differential chip load The chip load is discretized into very small elements with dA angular increments, so that at each of these discrete elements, corresponding differential forces in three orthogonal directions can be calculated. The integration of these differential forces over the tool workpiece engagement domain is used to determine the total cutting forces in three orthogonal directions. For the calculation of the local chip thicknesses and local chip loads, there are three different situations, depending on the radial depth of cut. In Fig. 3, and are the two transition radial depths of cut. 1 ap 2 ap 1 0 ap R R B  sin , 2 0 ap R R r B r C    ( )sin sin , 0 0 arcsin sin (ʌ ) f CB B r ª º  « » ¬ ¼, where B0 is obtained from the orientation of the cutter shown in Fig. 4. • Situation 1 For radial depths of cut ap greater than (Figs. 3 and 4). 2 ap In this situation, the local chip thickness can be calculated for Region 1 ( ), Region 2 ( A AA 0 İ ¬ 1 A AB 1 İ ¬ 0 ), Region 3 ( B0 1 İ A B ¬ ), and Region 4 ( B1 2 İ İA B ) as follows: When , where 0 bR Rr B r, A r ª º   « » ¬ ¼, 0 1 ʌ cos arctan 2 ( r Af A r ap b ª   « » ¬ ¼   ) º , 0 1 1 sin arcsin R B B L § · ¨ ¸ © ¹ , 2 ʌ arccos 2 f B R § · ¨ ¸ © ¹ . • Situation 2 For radial depths of cut ap greater than and smaller than (Fig. 5). 1 ap 2 ap In this situation, the local chip thickness can be calculated for Region 1 ( ), Region 2 ( A AB 0 İ ¬ 0 B0 İ A B ¬ 01 ), Region 3 ( B01 1 İ A B ¬ ), and Region 4 ( B1 2 İ İA B ) as follows: When , • Situation 3 For radial depths of cut ap smaller than (Fig. 6). 1 ap In this situation, the local chip thickness can be calculated for Region 1 ( ) and Region 2 ( A AB 01 02 İ ¬ B02 2 İ İA B ) as follows: When , where 5 arcsin sin(ʌ ) f CA A R ª º   « » ¬ ¼ , 01 arcsin R ap A R § ·  ¨ ¸ © ¹ , 0 02 ʌ cos arctan 2 R A f B R ap §   ¨ ¸ © ¹  · . After the local chip thickness is calculated, the differential chip load for each discrete element can be determined by the product of the local chip thickness and the length of the arc to which the discrete element belongs. Consequently, the differential chip load for each discrete element can be calculated as () 0 0 () () () 0 2 d , ; d d d , 1.3 Differential cutting forces In the turning process, the machining forces are composed of two main force components, namely, the cutting force components due to the shearing mechanism and the edge force components mainly due to a plowing mechanism. The discrete cutting force components are proportional to the local chip load with local oblique cutting force coefficients. The discrete edge force components are proportional to the local chip-insert contact length with edge force coefficients. The tangential, radial, and feed components of cutting force for each discrete element can thus be calculated as follows: are tangential, radial, and feed cutting force coefficients, respectively, w ¬ İ ¬ hich can be determined from the following equations[12]: where s , W n I , and En are, respectively, the shear flow stress, and the shear and friction angles determined from the orthogonal calibration tests; K is the chip flow angle, which is determined from Stabler’s rule (i.e., K i ); i is the local inclination angle of the respective discrete cutting edge, which c n be determined from where Dp and Df are the back rake and side rake angles of the tool; \ r is the side cutting edge angle, and is equal to the rotational position of the respective discre for each discrete element, te ent (i.e., elem \ r A). The normal rake angle Dn can be det ined from The edge forces are generated not due to the cutting mechanism but due to the pl g hanism. Therefore, the edge coefficients ( te( ) , K A Kfe( ) A ) can be easily determined by extending the feedrate-force graphs obtained from the orthogonal cutting calibration tests to the zero feedrate. In the orthogonal calibration tests, Kre( ) A is assumed to be zero, owin mec since nearly no radial force should exist in these tests. 1.4 Cutting forces in three orthogonal directions From the differential cutting forces given above, the cutting forces in three orthogonal directions can be determined by integrating the differential cutting forces over the tool-workpiece engagement domain. In the Cartesian force measurement coordinate system, the total cutting forces in three orthogonal directions can be Tangential cutting force component, where N re N Z Z N ements. At this point, the total cutting forces in tho onal directions have all been derived. Simulati In order to determine the cutting force coefficients and edge coefficients of the model, orthogonal calibration tests were performed on the commonly used automobile transmission material of induction hardened 51CrV4. The hardness of the material was 68 HRC and the tube thickness was 2 mm. The cutting tests were performed on a Monfort 400 RC Plus CNC turning machine under rigid cutting conditions. The cutting inserts used in the calibration tests were Seco TPGN 110308E CBN 100. In the calibration tests without chipping, the lower and upper limits of the cutting speeds were 90 m/min and 140 m/min. The feedrate values were changed between 0.01 mm/rev and 0.08 mm/rev with 0.01 mm/rev increments. The cutting force components were collected in two orthogonal directions at a sampling rate of 6 kHz in order to determine the average friction angle, the shear flow stress, and the edge force coefficients. The shear angle value was determined from the chip ratios. From these orthogonal cali ation tests, the values were obtained as: shear angle In = 35.5Û, average friction angle En = 12Û, average shear flow stre s ss W = 973 MPa, tangential force edge coeff nt icie /mm, f force Kte = 36.52 N edge coeffi = 7 mm. 2.2 Validation test After obtaining the values in Section 2.1, a predictive model was constructed using Matlab 6.0, and simulations were run for various cutting parameters. In the validation tests, the cutting speed, the radial depth of cut, and the feed were set at 120 m/min, 140 m/min,160 m/min, 0.06 mm, 0.08 mm, 0.10 mm, 0.12 mm, and 0.12 mm, 0.16 mm, 0.20 mm, 0.24 mm, respectively. Seco DNGA 150612S-L1 CBN 10 was utilized. The geometry of the insert was shown in Fig. 1, and the chamfer angle of the insert was 20Û. Once placed in the tool holder, the effective rake angle on the chamfered part of the insert was 26Û, and the side rake angle was 0Û. The length of the chamfer was 150 μm. Considering the radial depths of cut quoted above, it should be noted that all the experimental validation tests were performed in the chamfered region of the insert. The validation test results are analyzed in Figs. 7-10. From a comparison of the experimental and simulation results, it can be observed that the radial cutting force component and the feed force component match quite well. The trends in the tangential cutting force components agree well but there are some discrepancies in the magnitude of the predicted forces, possible reasons for this may be as follows. • In the predictive model, only the average friction value was used, and ploughing forces were assumed to be negligible. • Because of the relatively small depth of cut in hard turning, vibrations in the signals related to slight deviations of the workpiece rotation axis are relatively strong. Moreover, for a small depth of cut the influence of a skewed clamping situation is more dominant. • For the small cutting force components (the tangential cutting force component and the feed force component) and the very low cutting parameter, the forces are comparable to the resolution of the measurement device. 3 Conclusions In this paper, the mechanical aspects of the hard turning process have been analyzed in detail. A predictive model was developed for the machining forces in hard turning, based on the method given by Altintas[12]. The predicted cutting forces were compared with experimental measurements for the purposes of model validation. In most cases, the results agree quite well. However, for the tangential cutting force component, there are some discrepancies between the simulation and experimental results. Some possible reasons for these discrepancies have been given. It is expected that this research may lead to a better understanding of the physics of the hard turning process. 

 


 




